/* 
 * RecommendedParts Api
 *
 * Provides a collection of recommended products for a given product. These are products that you may be interested in given your interest in the provided part number.
 *
 * OpenAPI spec version: v3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace OriginalCircuit.DigiKey.Api.Model
{
    /// <summary>
    /// The recommended products returned grouped in collections.
    /// </summary>
    [DataContract]
    public partial class RecommendedProductsResponse :  IEquatable<RecommendedProductsResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RecommendedProductsResponse" /> class.
        /// </summary>
        /// <param name="recommendedProductsCollection">The list of RecommendedProductsCollections - each containing a Product and its recommendations..</param>
        public RecommendedProductsResponse(List<RecommendedProductsCollection> recommendedProductsCollection = default(List<RecommendedProductsCollection>))
        {
            this.RecommendedProductsCollection = recommendedProductsCollection;
        }
        
        /// <summary>
        /// The list of RecommendedProductsCollections - each containing a Product and its recommendations.
        /// </summary>
        /// <value>The list of RecommendedProductsCollections - each containing a Product and its recommendations.</value>
        [DataMember(Name="RecommendedProductsCollection", EmitDefaultValue=false)]
        public List<RecommendedProductsCollection> RecommendedProductsCollection { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class RecommendedProductsResponse {\n");
            sb.Append("  RecommendedProductsCollection: ").Append(RecommendedProductsCollection).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as RecommendedProductsResponse);
        }

        /// <summary>
        /// Returns true if RecommendedProductsResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of RecommendedProductsResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(RecommendedProductsResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.RecommendedProductsCollection == input.RecommendedProductsCollection ||
                    this.RecommendedProductsCollection != null &&
                    this.RecommendedProductsCollection.SequenceEqual(input.RecommendedProductsCollection)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.RecommendedProductsCollection != null)
                    hashCode = hashCode * 59 + this.RecommendedProductsCollection.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
